{"version":3,"sources":["components/List/ListItem/ListItem.js","components/List/List.js","components/Details/Details.js","components/Loading/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","_ref","item","getUserIdHandler","_jsx","className","active","onClick","id","children","name","List","list","map","Details","userInfo","_Fragment","avatar","details","city","company","position","_jsxs","src","alt","Loading","baseURL","App","_useState","useState","_useState2","_slicedToArray","setList","_useState3","_useState4","userID","setUserID","_useState5","_useState6","setUserInfo","_useState7","_useState8","loading","setLoading","useEffect","fetch","then","response","json","data","prevState","concat","_toConsumableArray","_objectSpread","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfdd58a7.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ListItem({ item, getUserIdHandler }) {\n  return (\n    <li\n      className={'list_item ' + (item.active ? 'active' : '')}\n      onClick={() => {\n        getUserIdHandler(item.id);\n      }}\n    >\n      {item.name}\n    </li>\n  );\n}\n","import React from 'react';\nimport ListItem from './ListItem/ListItem';\n\nexport default function List({ list, getUserIdHandler }) {\n  return (\n    <div className='list_container'>\n      <ul className='list'>\n        {list.map((item) => (\n          <ListItem\n            key={item.id}\n            item={item}\n            getUserIdHandler={getUserIdHandler}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Details({ userInfo }) {\n  if (!userInfo) return <></>;\n  const { id, name, avatar, details } = userInfo;\n  const { city, company, position } = details;\n  return (\n    <div className='container_details' data-id={id}>\n      <img src={avatar} alt='avatar' />\n      <span className='container_details-name'>{name}</span>\n      <span>City: {city}</span>\n      <span>Company: {company}</span>\n      <span>Position: {position}</span>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Loading() {\n  return <div className='Loading'>Загрузка...</div>;\n}\n","import React, { useState, useEffect } from 'react';\nimport List from './components/List/List';\nimport Details from './components/Details/Details';\nimport Loading from './components/Loading/Loading';\n\nconst baseURL =\n  'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/';\n\nexport default function App() {\n  const [list, setList] = useState([]);\n  const [userID, setUserID] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(baseURL + 'users.json')\n      .then((response) => response.json())\n      .then((data) => setList((prevState) => [...prevState, ...data]))\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!userID) {\n      return;\n    }\n    setLoading(true);\n    fetch(`${baseURL}${userID}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUserInfo((prevState) => ({ ...prevState, ...data }));\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, [userID]);\n\n  const getUserIdHandler = (id) => {\n    setList((prevState) => {\n      const newState = prevState.map((item) => {\n        item.id === id ? (item.active = true) : (item.active = false);\n        return item;\n      });\n      return newState;\n    });\n    setUserID(id);\n  };\n\n  return (\n    <div className='wrapper'>\n      <div className='container'>\n        <div className='container_column'>\n          {loading && !list.length && <Loading />}\n          {list.length && (\n            <List list={list} getUserIdHandler={getUserIdHandler} />\n          )}\n        </div>\n        <div className='container_column'>\n          {userID && loading && <Loading />}\n          {!loading && userInfo && <Details userInfo={userInfo} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}